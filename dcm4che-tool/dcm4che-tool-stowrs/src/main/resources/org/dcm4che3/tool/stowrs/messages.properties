usage=stowrs [options]  -u <stowURL> [<filesToBeStored>..]
try=Try `stowrs --help' for more information.
description=\n\
For DICOM files sends the files to STOW-RS receiver. \
For non-dicom type of files (i.e. bulkdata), reads metadata from specified metadata files \
or parameters and send them to a stowRS Receiver. \
Attributes for bulkdata can be specified using -m <metadata> or -mf <metadata-file>
Options:
example=-\n\
Example: stowrs -m PatientName=John^Doe -u http://localhost/stow/studies[/{StudyInstanceUID}] img.jpeg \n\
=> Send stow request to stowRS Receiver with the attribute given and img.jpeg bulkData.
Example: stowrs -u http://localhost/stow/studies[/{StudyInstanceUID}] img.dcm \n\
=> Send stow request to stowRS Receiver with the given dicom file.
metadata=specify metadata attributes. attr can be specified by keyword or tag value \
(in hex), e.g. PatientName or 00100010. Attributes in nested Datasets can be \
specified by including the keyword/tag value of the sequence attribute, \
e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request.
url=specify the request URL.
file=specify the file containing the metadata in XML format.
type=specify the value for Content-type header : xml or json \
The value of Content-type will then be sent in request as application/dicom+xml or application/dicom+json. \
If this flag is absent, for bulkdata type of objects application/dicom+json will be used. \
Note that for DICOM objects, tool will always send Content-type as application/dicom
accept=Specify the value for Accept header : xml or json. \
The value of Accept header will then be sent in request as application/dicom+xml or application/dicom+json. \
If this flag is absent, for DICOM objects application/dicom+xml will be used and for bulkdata type of objects application/dicom+json will be used. 
pixel-header=Specifies if metadata information is to be extracted from header of pixel data for jpegs and mpegs.
no-appn=Exclude application segments APPn from JPEG stream; encapsulate JPEG stream verbatim by default.